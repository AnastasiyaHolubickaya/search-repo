{"version":3,"sources":["components/splashScreen/splash.module.css","components/splashScreen/splashScreen.tsx","components/commons/FormControls/FormControls.tsx","api/api.ts","redux/reducer.ts","components/listItems/ListItems.tsx","utils/sortByField.ts","components/pagination/Pagination.tsx","pages/home/HomePage.tsx","pages/detail/DetailPage.tsx","App.tsx","redux/store.ts","index.tsx","pages/home/homePage.module.css","components/listItems/listItem.module.css","components/commons/FormControls/FormControls.module.css","pages/detail/detailPage.module.css","components/pagination/Paginator.module.css"],"names":["module","exports","SplashScreen","className","classes","container","animationIn","animationOut","isVisible","FormControl","children","meta","touched","error","showError","undefined","spanError","Input","props","input","restprops","ServerRequest","baseURL","url","currentPage","perPage","fetch","this","then","data","json","instance","getRepositopies","getInstance","initialState","isRequestSubmit","massRepos","firstTimeFlaf","repoId","message","totalCount","searchValue","actions","type","flag","id","mess","value","getRepos","dispatch","a","getData","total_count","items","reducer","state","action","ListItems","handleOnClick","useState","setFavorit","block","map","item","index","block_item","name","stargazers_count","to","btn","onClick","localStorage","getItem","removeItem","style","color","border","setItem","JSON","stringify","toString","byField","field","b","Pagination","onPageChange","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","filter","p","cn","e","requiredField","ReduxForm","reduxForm","form","handleSubmit","loginForm","onSubmit","loginFormInput","Field","component","validate","formSummaryError","loginFormButton","btnSubmit","HomePage","dataRepoz","useSelector","app","isRequestSub","setData","isByName","setIsByName","isByRating","setIsByRating","isByDate","setIsByDate","useDispatch","useEffect","sort","formData","fontSize","setClickRepo","page","DetailPage","block_photo","src","owner","avatar_url","alt","block_info","login","description","created_at","href","html_url","App","setTimeout","exact","path","render","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.dd9abace.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"splash_container__2tJso\"};","import React from \"react\";\r\nimport classes from './splash.module.css';\r\nimport {Animated} from \"react-animated-css\";\r\n\r\n\r\ntype propsType = {}\r\n\r\n\r\nexport const SplashScreen: React.FC<propsType> = () => {\r\n    return (\r\n        <div className={classes.container}>\r\n            <Animated animationIn=\"zoomIn\" animationOut=\"fadeOut\" isVisible={true}>\r\n                <p>\r\n                    Анастасия Голубицкая\r\n                </p>\r\n            </Animated>\r\n        </div>\r\n    )\r\n};\r\n","import React from \"react\";\r\nimport classes from \"./FormControls.module.css\"\r\nimport {WrappedFieldMetaProps, WrappedFieldProps} from \"redux-form\";\r\n\r\n\r\ntype formPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n}\r\n\r\nconst FormControl: React.FC<formPropsType> = ({children, meta: {touched, error}}) => {\r\n    const showError = touched && error;\r\n    return (\r\n        <div className={showError ? classes.error : undefined}>\r\n            {children}<br/>\r\n            {showError && <span className={classes.spanError}>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restprops} = props;\r\n    return <FormControl {...props}> <input {...input} {...restprops} className={classes.input}/></FormControl>\r\n};\r\n","class ServerRequest {\r\n    private baseURL = \"https://api.github.com/search/repositories\";\r\n    private static instance: ServerRequest;\r\n\r\n    private constructor() {\r\n    };\r\n\r\n    static getInstance(): ServerRequest {\r\n        if (typeof ServerRequest.instance === 'object') {\r\n            return ServerRequest.instance;\r\n        }\r\n        ServerRequest.instance = new ServerRequest();\r\n        return ServerRequest.instance;\r\n    }\r\n\r\n    getData(url: string, currentPage: number, perPage: number) {\r\n        return fetch(`${this.baseURL}?q=${url}&per_page=${perPage}&page=${currentPage}`)\r\n            .then(data => data.json())\r\n    }\r\n}\r\n\r\nexport const getRepositopies = ServerRequest.getInstance();","import {BaseThuncType, InferActionType} from \"./store\";\r\nimport {getRepositopies} from \"../api/api\";\r\n\r\n\r\ntype ActionsType = InferActionType<typeof actions>;\r\ntype ThuncType = BaseThuncType<ActionsType>\r\n\r\nexport type listType = {\r\n    id: number\r\n    name: string\r\n    stargazers_count: number\r\n    html_url: string\r\n    created_at: string\r\n    description: string\r\n    owner: {\r\n        avatar_url: string\r\n        login: string\r\n    }\r\n}\r\n\r\n\r\nlet initialState = {\r\n    isRequestSubmit: false,\r\n    massRepos: [] as Array<listType>,\r\n    firstTimeFlaf: false,\r\n    repoId: null as null | number,\r\n    message: null as null | string,\r\n    currentPage: 0,\r\n    perPage: 10,\r\n    totalCount: 0,\r\n    searchValue: \"\",\r\n};\r\nexport type initialStateType = typeof initialState;\r\n\r\n\r\nconst reducer = (state = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"SET_REPO\":\r\n            return {\r\n                ...state,\r\n                massRepos: action.data,\r\n                isRequestSubmit: true,\r\n            };\r\n        case \"SET_FIRST_TIME_FLAG\":\r\n            return {\r\n                ...state,\r\n                firstTimeFlaf: action.flag,\r\n            };\r\n        case \"SET_CLICK_ID\":\r\n            return {\r\n                ...state,\r\n                repoId: action.id,\r\n            };\r\n        case \"SET_MESSAGE\":\r\n            return {\r\n                ...state,\r\n                message: action.mess,\r\n            };\r\n        case \"SET_CURRENT_PAGE\":\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            };\r\n        case \"SET_SEARCH_VALUE\":\r\n            return {\r\n                ...state,\r\n                searchValue: action.value\r\n            };\r\n        case \"SET_TOTAL_COUNT\":\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const actions = {\r\n    setRepo: (data: any) => ({type: \"SET_REPO\", data} as const),\r\n    setFirstTimeFlaf: (flag: boolean) => ({type: \"SET_FIRST_TIME_FLAG\", flag} as const),\r\n    setId: (id: number) => ({type: \"SET_CLICK_ID\", id} as const),\r\n    setMessage: (mess: string) => ({type: \"SET_MESSAGE\", mess} as const),\r\n    setCurrentPage: (currentPage: number) => ({type: \"SET_CURRENT_PAGE\", currentPage} as const),\r\n    setSearchValue: (value: string) => ({type: \"SET_SEARCH_VALUE\", value} as const),\r\n    setTotalCount: (totalCount: number) => ({type: \"SET_TOTAL_COUNT\", totalCount} as const),\r\n};\r\n\r\nexport const getRepos = (searchValue: string, currentPage: number, perPage: number): ThuncType => async (dispatch: any) => {\r\n    let data = await getRepositopies.getData(searchValue, currentPage, perPage);\r\n    if (data.message) {\r\n        dispatch(actions.setMessage(data.message))\r\n    } else {\r\n        dispatch(actions.setTotalCount(data.total_count));\r\n        dispatch(actions.setRepo(data.items))\r\n    }\r\n};\r\nexport const setFlagApp = (flag: boolean) => (dispatch: any) => {\r\n    dispatch(actions.setFirstTimeFlaf(flag))\r\n};\r\nexport const setClickRepo = (id: number) => (dispatch: any) => {\r\n    dispatch(actions.setId(id))\r\n};\r\n\r\n\r\nexport default reducer;","import React, {useEffect, useState} from \"react\";\r\nimport classes from './listItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype propsType = {\r\n    data: any\r\n    handleOnClick: (id: number) => void\r\n}\r\n\r\n\r\nexport const ListItems: React.FC<propsType> = ({data, handleOnClick}) => {\r\n    const [isFavorit, setFavorit] = useState(false);\r\n\r\n    const handleAddFavorit = (name: string, id: number) => {\r\n        localStorage.setItem(name, JSON.stringify(id));\r\n        setFavorit(true)\r\n    };\r\n    const handleRemoveFavorit = (name: string) => {\r\n        localStorage.removeItem(name);\r\n        setFavorit(false)\r\n    };\r\n\r\n    return (\r\n        <div className={classes.block}>\r\n            {data.map((item: any, index: number) => {\r\n                return <div key={item.id.toString()} className={classes.block_item}>\r\n                    <p>Имя репозитория: <b>{item.name}</b></p>\r\n                    <p>Рейтинг: {item.stargazers_count}</p>\r\n                    <NavLink to={'/details'}>\r\n                        <button className={classes.btn} onClick={() => handleOnClick(index)}>детальнее</button>\r\n                    </NavLink>\r\n                    {localStorage.getItem(item.name) ?\r\n                        <button onClick={() => handleRemoveFavorit(item.name)}\r\n                                style={{color: \"blue\", border: \"1px solid blue\"}} className={classes.btn}>удалить из\r\n                            избранное\r\n                        </button>\r\n                        : <button onClick={() => handleAddFavorit(item.name, item.id)}\r\n                                  className={classes.btn}\r\n                                  style={{color: \"green\", border: \"1px solid green\"}}>добавить в избранное </button>\r\n                    }\r\n                </div>\r\n            })}\r\n\r\n        </div>\r\n\r\n    )\r\n};","export const byField = (field: any) => {\r\n    return (a: any, b: any) => a[field] > b[field] ? 1 : -1;\r\n};\r\n","import React, {useState} from \"react\";\r\nimport classes from './Paginator.module.css';\r\nimport cn from \"classnames\"\r\n\r\ntype propsType = {\r\n    currentPage: number\r\n    perPage: number\r\n    totalCount: number\r\n    onPageChange: (pageNumber: number) => void\r\n}\r\n\r\nconst Pagination: React.FC<propsType> = ({currentPage, perPage, totalCount, onPageChange}) => {\r\n\r\n    let portionSize = 10;\r\n\r\n    let pagesCount = Math.ceil(totalCount / perPage);\r\n\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n\r\n        <div className={classes.block}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}> &#9668; </button>\r\n            }\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <span className={cn(currentPage === p && classes.currentPage)}\r\n                                 key={p}\r\n                                 onClick={(e) => {\r\n                                     onPageChange(p)\r\n                                 }}> {p} </span>\r\n                })\r\n            }\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}> &#9658; </button>\r\n            }\r\n        </div>\r\n    )\r\n};\r\nexport default Pagination;","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport classes from './homePage.module.css';\r\nimport {Input} from \"../../components/commons/FormControls/FormControls\";\r\nimport {actions, getRepos, listType, setClickRepo} from \"../../redux/reducer\";\r\nimport {ListItems} from \"../../components/listItems/ListItems\";\r\nimport {byField} from \"../../utils/sortByField\";\r\nimport Pagination from \"../../components/pagination/Pagination\";\r\n\r\n\r\ntype ownPropsType = {}\r\ntype PropsType = {\r\n    dataRepoz: Array<listType>\r\n}\r\ntype formDataType = {\r\n    name: string\r\n}\r\ntype validatorType = (value: string) => string | undefined\r\n\r\nconst requiredField: validatorType = (value) => {\r\n    if (value) return undefined;\r\n    return \"введите данные для поиска\";\r\n};\r\n/*const validateSumbol: validatorType = (value) => {\r\n    if (value !== undefined) {\r\n        let regex = new RegExp(/^[a-zA-Z0-9]+$/i);\r\n        if (!regex.test(value)) return (`разрешен ввод только букв латинского алфавита`);\r\n    }\r\n    return undefined;\r\n};*/\r\nconst SearchForm: React.FC<InjectedFormProps<formDataType> & ownPropsType> = ({handleSubmit, error}) => {\r\n    return (\r\n        <form className={classes.loginForm} onSubmit={handleSubmit}>\r\n            <div className={classes.loginFormInput}><Field name={'name'}\r\n                                                           component={Input}\r\n                                                           validate={[requiredField]}/></div>\r\n            {\r\n                error && <div className={classes.formSummaryError}> {error}</div>\r\n            }\r\n            <div className={classes.loginFormButton}>\r\n                <button className={classes.btnSubmit}> Поиск</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\nconst ReduxForm = reduxForm<formDataType, ownPropsType>({\r\n    form: 'search'\r\n})(SearchForm);\r\n\r\n\r\nexport const HomePage: React.FC<PropsType> = ({dataRepoz}) => {\r\n\r\n        const searchValue = useSelector((state: AppStateType) => state.app.searchValue);\r\n        const currentPage = useSelector((state: AppStateType) => state.app.currentPage);\r\n        const totalCount = useSelector((state: AppStateType) => state.app.totalCount);\r\n        const perPage = useSelector((state: AppStateType) => state.app.perPage);\r\n        const isRequestSub = useSelector((state: AppStateType) => state.app.isRequestSubmit);\r\n        const mess = useSelector((state: AppStateType) => state.app.message);\r\n\r\n        const [data, setData] = useState(dataRepoz);\r\n        const [isByName, setIsByName] = useState(false);\r\n        const [isByRating, setIsByRating] = useState(false);\r\n        const [isByDate, setIsByDate] = useState(false);\r\n\r\n        const dispatch = useDispatch();\r\n\r\n        const onSubmit = (formData: formDataType) => {\r\n            dispatch(actions.setSearchValue(formData.name));\r\n            dispatch(actions.setCurrentPage(1));\r\n            dispatch(getRepos(formData.name, currentPage, perPage));\r\n        };\r\n        const handleOnClick = (id: number) => {\r\n            dispatch(setClickRepo(id));\r\n        };\r\n        const onPageChange = (page: number) => {\r\n            dispatch(actions.setCurrentPage(page))\r\n        };\r\n        useEffect(() => {\r\n            if (searchValue !== '' || currentPage >= 1)\r\n                dispatch(getRepos(searchValue, currentPage, perPage));\r\n        }, [currentPage, searchValue]);\r\n\r\n        useEffect(() => {\r\n            setData(dataRepoz);\r\n        }, [dataRepoz]);\r\n\r\n        useEffect(() => {\r\n            if (isByName) {\r\n                setData(dataRepoz.sort(byField(\"name\")));\r\n                setIsByName(false)\r\n            }\r\n            if (isByRating) {\r\n                setData(dataRepoz.sort(byField(\"stargazers_count\")));\r\n                setIsByRating(false)\r\n            }\r\n            if (isByDate) {\r\n                setData(dataRepoz.sort(byField(\"created_at\")));\r\n                setIsByDate(false)\r\n            }\r\n        }, [isByName, isByDate, isByRating]);\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <p>Поиск репозиториев на GitHub</p>\r\n                <ReduxForm\r\n                    onSubmit={onSubmit}\r\n                />\r\n                <div>\r\n                    <p style={{fontSize: \"14px\"}}>Сортировать по</p>\r\n                    <button onClick={() => (setIsByName(true))}>имени</button>\r\n                    <button onClick={() => (setIsByDate(true))}>дате</button>\r\n                    <button onClick={() => (setIsByRating(true))}>рейтингу</button>\r\n                </div>\r\n                {isRequestSub && <ListItems data={data}\r\n                                            handleOnClick={handleOnClick}\r\n                />}\r\n                {mess && <div>по вашему запросу ничего не найдено: {mess}</div>}\r\n                <Pagination\r\n                    totalCount={totalCount}\r\n                    currentPage={currentPage}\r\n                    perPage={perPage}\r\n                    onPageChange={onPageChange}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n;\r\n","import React from \"react\";\r\nimport classes from './detailPage.module.css';\r\nimport {listType} from \"../../redux/reducer\";\r\n\r\ntype propsType = {\r\n    data: listType\r\n}\r\n\r\n\r\nexport const DetailPage: React.FC<propsType> = ({data}) => {\r\n    return (\r\n        <div className={classes.block}>\r\n            <div className={classes.block_photo}>\r\n                <img src={data.owner.avatar_url} alt=\"\"/>\r\n            </div>\r\n            <div className={classes.block_info}>\r\n                <span>Имя репозитория:</span>\r\n                <span>{data.name}</span>\r\n                <span>Автор: </span>\r\n                <span>{data.owner.login}</span>\r\n                <span>Описание: </span>\r\n                <span>{data.description}</span>\r\n                <span>Дата создания: </span>\r\n                <span>{data.created_at}</span>\r\n                <a href={data.html_url}>Cсылка на GitHub</a>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React, {useEffect} from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport './App.css';\nimport {SplashScreen} from \"./components/splashScreen/splashScreen\";\nimport {AppStateType} from \"./redux/store\";\nimport {HomePage} from \"./pages/home/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setFlagApp} from \"./redux/reducer\"\nimport {DetailPage} from \"./pages/detail/DetailPage\";\n\n\nconst App: React.FC = () => {\n    const dataRepoz = useSelector((state: AppStateType) => state.app.massRepos);\n    const repoId = useSelector((state: AppStateType) => state.app.repoId);\n    let firstTimeFlaf = useSelector((state: AppStateType) => state.app.firstTimeFlaf);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        setTimeout(() => dispatch(setFlagApp(true)), 3000);\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <Switch>\n                {!firstTimeFlaf\n                    ? <SplashScreen/>\n                    : <Route exact path='/' render={() => <HomePage dataRepoz={dataRepoz}/>}/>\n                }\n                {repoId !== null && <Route path='/details' render={() => <DetailPage data={dataRepoz[repoId]}/>}/>}\n                <Route path='*' render={() => <div> 404 not found </div>}/>\n            </Switch>\n        </div>\n    );\n\n};\n\nexport default App;\n","import {Action, applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport reducer from \"./reducer\";\r\n\r\ntype RootReduserType = typeof reducers;\r\nexport type AppStateType = ReturnType<RootReduserType>;\r\ntype PropertyTypes<T> = T extends { [key: string]: infer U } ? U : never\r\nexport  type InferActionType<T extends { [key: string]: (...args: any[]) => any }> = ReturnType<PropertyTypes<T>>\r\nexport type BaseThuncType<AT extends Action, TH = Promise<void>> = ThunkAction<TH, AppStateType, unknown, AT>\r\n\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;//для подключения к проекту расширения REDUX для google chrom\r\n\r\nlet reducers = combineReducers(\r\n    {\r\n        app: reducer,\r\n        form: formReducer,\r\n    }\r\n);\r\n\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\nimport store from './redux/store';\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App  />\n        </Provider>\n    </HashRouter>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"homePage_container__3nsCG\",\"btnSubmit\":\"homePage_btnSubmit__3yWey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"listItem_block__P23GK\",\"block_item\":\"listItem_block_item__2lX_o\",\"btn\":\"listItem_btn__LRUgc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textareaAddMess\":\"FormControls_textareaAddMess__3PS5L\",\"input\":\"FormControls_input__2kKs_\",\"error\":\"FormControls_error__2xnxl\",\"spanError\":\"FormControls_spanError__2vC1Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"detailPage_block__2BC16\",\"block_photo\":\"detailPage_block_photo__1y4Ff\",\"block_info\":\"detailPage_block_info__fY9Bs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentPage\":\"Paginator_currentPage__2CYgm\",\"block\":\"Paginator_block__2weWu\"};"],"sourceRoot":""}